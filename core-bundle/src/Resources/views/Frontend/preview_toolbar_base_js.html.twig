<style>
    .cto-toolbar {
        font-family: -apple-system, system-ui, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
        font-weight: 400;
        font-size: 14px;
        line-height: 1;
        color: #444;
        top: 0;
        z-index: 99999;
        position: fixed;
        width: 100%;
    }

    @media (-webkit-min-device-pixel-ratio: 2),(min-resolution: 192dpi) {
        .cto-toolbar {
            color: #222;
            font-weight: 300;
        }
    }

    .cto-toolbar__inside {
        display: grid;
        grid-template: auto / 1fr auto;
    }

    .cto-toolbar__open {
        display: none;
        width: 36px;
        height: 36px;
        background: #222;
    }

    .cto-toolbar__open a {
        display: flex;
        height: 100%;
        align-items: center;
        justify-content: center;
        opacity: .7;
    }

    .cto-toolbar--hidden {
        border-radius: 0 0 0 4px;
    }

    .cto-toolbar--hidden .cto-toolbar__open {
        display: block;
    }

    .cto-toolbar__close {
        border-left: 1px solid #ccc;
    }

    .cto-toolbar__close a {
        font-weight: 600;
        font-size: 29px;
        color: #444;
        text-decoration: none;
        display: block;
        padding: 3px 8px 7px 9px;
    }

    .cto-toolbar__close a:hover {
        color: #666;
        background: rgba(0, 0, 0, 0.03);
    }
</style>


<template id="cto-toolbar-scripts">
    {% for script in scripts %}
        {{ script|raw }}
    {% endfor %}
</template>


<script>
    (function () {
        customElements.define('contao-toolbar',
        class extends HTMLElement {
            constructor() {
                super();

                const shadow = this.attachShadow({mode: 'open'});
                const wrapper = document.createElement('div');
                wrapper.setAttribute('class', 'cto-toolbar__wrapper');

                const close = document.createElement('div');
                close.setAttribute('class', 'cto-toolbar__close');
                close.innerHTML = '<a href="">&times;</a>';

                // Fetch toolbar
                fetch('{{ action }}')
                    .then(response => response.text())
                    .then(html => {
                        const event = new Event('cto-toolbar-loaded');

                        wrapper.innerHTML = html;
                        window.dispatchEvent(event);
                    })
                ;

                // Create some CSS to apply to the shadow dom
                var style = document.createElement('style');

                style.textContent = `
.cto-toolbar__wrapper {
  background: #f2f2f2;
}
`;

                // Attach the created elements to the shadow dom
                shadow.appendChild(style);
                shadow.appendChild(document.querySelector('template[id="cto-toolbar-scripts"]').content);
                shadow.appendChild(wrapper);
                shadow.appendChild(close);
            }
        });

        const toolbar = document.createElement('contao-toolbar');
        toolbar.classList.add('cto-toolbar');
        document.querySelector('body').prepend(toolbar);

        window.contaoToolbar = toolbar;

        // Initialize toolbar
        if ('hidden' === localStorage.getItem('contao/previewBar/displayState')) {
            toolbar.classList.add('cto-toolbar--hidden');
        } else {
            toolbar.classList.add('cto-toolbar--visible');
        }

        // Collapse toolbar
        window.addEventListener("cto-toolbar-loaded", function () {
            Array.from([toolbar.querySelector('.cto-toolbar__close'), toolbar.querySelector('.cto-toolbar__open')]).forEach(toggle => {
                if (null === toggle) {
                    return;
                }

                toggle.addEventListener('click', function (event) {
                    event.preventDefault();

                    const toolbar = event.currentTarget.closest('.cto-toolbar');
                    if (toolbar.classList.contains('cto-toolbar--hidden')) {
                        localStorage.setItem('contao/previewBar/displayState', 'visible');
                        toolbar.classList.replace('cto-toolbar--hidden', 'cto-toolbar--visible');
                    } else {
                        localStorage.setItem('contao/previewBar/displayState', 'hidden');
                        toolbar.classList.replace('cto-toolbar--visible', 'cto-toolbar--hidden');
                    }

                });
            });
        });
    })();
</script>
