name: CI

on:
    pull_request: ~
    push:
        branches:
            - 4.12
        tags:
            - 4.12.*
    schedule:
        - cron: 0 13 * * MON,TUE

jobs:
    coverage:
        name: Coverage
        runs-on: ubuntu-18.04
        if: github.event_name != 'schedule'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: pcov

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Generate the coverage report
              run: php -d pcov.enabled=1 vendor/bin/phpunit --testsuite=coverage --coverage-clover=clover.xml --colors=always

            - name: Upload the coverage report
              uses: codecov/codecov-action@v1
              with:
                  file: ./clover.xml
                  fail_ci_if_error: true

    ecs:
        name: ECS
        runs-on: ubuntu-18.04
        if: github.event_name == 'pull_request'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin ecs install --no-interaction --no-progress

            - name: Run ECS
              run: tools/ecs/vendor/bin/ecs check *-bundle/bin *-bundle/src *-bundle/tests --config tools/ecs/vendor/contao/easy-coding-standard/config/default.php --no-progress-bar --ansi

    ecs-legacy:
        name: ECS Legacy
        runs-on: ubuntu-18.04
        if: github.event_name == 'pull_request'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin ecs install --no-interaction --no-progress

            - name: Run ECS
              run: |
                  tools/ecs/vendor/bin/ecs check *-bundle/src/Resources/contao --config tools/ecs/vendor/contao/easy-coding-standard/config/legacy.php --no-progress-bar --ansi
                  tools/ecs/vendor/bin/ecs check *-bundle/src/Resources/contao/templates --config tools/ecs/vendor/contao/easy-coding-standard/config/template.php --no-progress-bar --ansi

    phpstan:
        name: PHPStan
        runs-on: ubuntu-18.04
        if: github.event_name == 'pull_request'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin phpstan install --no-interaction --no-progress

            - name: Run PHPStan
              run: tools/phpstan/vendor/bin/phpstan analyse --no-progress

    psalm:
        name: Psalm
        runs-on: ubuntu-18.04
        if: github.event_name == 'pull_request'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin psalm install --no-interaction --no-progress

            - name: Run Psalm
              run: tools/psalm/vendor/bin/psalm --no-suggestions --no-progress

    yamllint:
        name: YAMLlint
        runs-on: ubuntu-18.04
        if: github.event_name == 'pull_request'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Run YAMLlint
              run: |
                  python3 -m pip install --upgrade pip
                  python3 -m pip install --upgrade setuptools wheel
                  python3 -m pip install --upgrade yamllint
                  /home/runner/.local/bin/yamllint .

    validate-assets:
        name: Validate the backend theme was built, thus assets are in sync with source files
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        defaults:
            run:
                working-directory: ./core-bundle/assets
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 100

            - name: Check if theme touched
              uses: marceloprado/has-changed-path@v1
              id: changed-theme
              with:
                  paths: ./core-bundle/assets

            - name: Setup Node
              if: steps.changed-theme.outputs.changed == 'true' # See actions/runner#662
              uses: actions/setup-node@v1
              with:
                  node-version: '10.x'

            - name: Get yarn cache directory path
              if: steps.changed-theme.outputs.changed == 'true'
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Cache yarn cache
              if: steps.changed-theme.outputs.changed == 'true'
              uses: actions/cache@v2
              id: cache-yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Cache node_modules
              if: steps.changed-theme.outputs.changed == 'true'
              id: cache-node-modules
              uses: actions/cache@v2
              with:
                  path: node_modules
                  key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

            - name: Run yarn
              if: steps.changed-theme.outputs.changed == 'true'
              run: yarn
              if: |
                  steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
                  steps.cache-node-modules.outputs.cache-hit != 'true'

            - name: Run yarn install
              if: steps.changed-theme.outputs.changed == 'true'
              run: yarn install

            - name: Build theme
              if: steps.changed-theme.outputs.changed == 'true'
              run: yarn run prod

            - name: Check for changes
              if: steps.changed-theme.outputs.changed == 'true'
              run: git diff --exit-code

    tests:
        name: PHP ${{ matrix.php }}
        runs-on: ubuntu-18.04
        if: github.event_name != 'push'
        strategy:
            fail-fast: false
            matrix:
                php: [7.4, 8.0]
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    nightly:
        name: PHP 8.1
        runs-on: ubuntu-18.04
        if: github.event_name != 'push'
        continue-on-error: true
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --ignore-platform-req=php --no-interaction --no-progress
                  # TODO: Remove the next line once Symfony 5.3.7 was released
                  composer require "symfony/http-foundation:5.3.*@dev" --ignore-platform-req=php --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    prefer-lowest:
        name: Prefer Lowest
        runs-on: ubuntu-18.04
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: composer update --prefer-lowest --prefer-stable --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    bundles:
        name: Bundles
        runs-on: ubuntu-18.04
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  tools: flex
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Test the single bundles
              run: |
                  bundles=(calendar-bundle core-bundle faq-bundle manager-bundle news-bundle)
                  for bundle in "${bundles[@]}"; do
                      cd $bundle
                      php -r '
                          $data = json_decode(file_get_contents(__DIR__."/composer.json"), true);
                          if ("contao/core-bundle" !== $data["name"]) {
                              $data["repositories"][0]["type"] = "path";
                              $data["repositories"][0]["url"] = "../core-bundle";
                          }
                          if ("contao/installation-bundle" !== $data["name"]) {
                              $data["repositories"][1]["type"] = "path";
                              $data["repositories"][1]["url"] = "../installation-bundle";
                          }
                          file_put_contents(__DIR__."/composer.json", json_encode($data, JSON_UNESCAPED_SLASHES));
                      '
                      COMPOSER_ROOT_VERSION=dev-${{ env.GITHUB_SHA }} composer install --no-interaction --no-progress
                      vendor/bin/phpunit --colors=always
                      cd ..
                  done

    windows:
        name: Windows
        runs-on: windows-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  ini-values: memory_limit=1G
                  tools: flex
                  coverage: none

            - name: Adjust the Git autocrlf setting
              run: git config --global core.autocrlf false

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit.bat --colors=always

    dependencies:
        name: Dependencies
        runs-on: ubuntu-18.04
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.0
                  extensions: json, zlib
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin monorepo install --no-interaction --no-progress

            - name: Validate the composer.json files
              run: tools/monorepo/vendor/bin/monorepo-tools composer-json --validate --ansi

    monorepo-split:
        name: Monorepo Split
        runs-on: ubuntu-18.04
        if: github.event_name == 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 7.4
                  extensions: json, zlib
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1

            - name: Cache the monorepo split
              uses: actions/cache@v1
              with:
                  path: .monorepo-split-cache
                  key: dev-${GITHUB_REF##*/}

            - name: Install the dependencies
              run: composer global require contao/monorepo-tools:dev-main

            - name: Split the monorepo
              run: $HOME/.composer/vendor/bin/monorepo-tools split ${GITHUB_REF##*/}
              env:
                  GITHUB_TOKEN: ${{ secrets.MONOREPO_SPLIT_TOKEN }}
