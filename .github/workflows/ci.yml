name: CI

on:
    push:
        branches:
            - master
            - '[0-9]+.[0-9]+'

    pull_request: ~

jobs:
    coverage:
        name: Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: 7.3
                  extension-csv: intl
                  coverage: pcov

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex
                  composer install --no-interaction --no-suggest

            - name: Generate the coverage report
              run: php -d pcov.enabled=1 vendor/bin/phpunit --testsuite=coverage --coverage-clover=clover.xml

            - name: Upload the report
              run: bash <(curl -s https://codecov.io/bash) -f clover.xml
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    coding-style:
        name: Coding Style
        runs-on: ubuntu-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: 7.3
                  extension-csv: intl
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex
                  composer install --no-interaction --no-suggest

            - name: Check the coding style
              run: |
                  PHP_CS_CONFIG=default vendor/bin/php-cs-fixer fix --diff --diff-format=udiff --dry-run
                  PHP_CS_CONFIG=legacy vendor/bin/php-cs-fixer fix --diff --diff-format=udiff --dry-run
                  PHP_CS_CONFIG=template vendor/bin/php-cs-fixer fix --diff --diff-format=udiff --dry-run

            - name: Analyze the code
              run: vendor/bin/phpstan analyse core-bundle/src core-bundle/tests --level=3 --no-progress

    tests:
        name: PHP ${{ matrix.php }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [7.2, 7.3]
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: ${{ matrix.php }}
                  extension-csv: intl
                  coverage: none

            - name: Create the database
              run: mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex
                  composer install --no-interaction --no-suggest

            - name: Run the unit tests
              run: vendor/bin/phpunit

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional
              env:
                  DATABASE_URL: mysql://root:root@localhost:3306/contao_test

    prefer-lowest:
        name: Prefer Lowest
        runs-on: ubuntu-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: 7.3
                  extension-csv: intl
                  coverage: none

            - name: Create the database
              run: mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex
                  composer update --prefer-lowest --prefer-stable --no-interaction --no-suggest

            - name: Run the unit tests
              run: vendor/bin/phpunit

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional
              env:
                  DATABASE_URL: mysql://root:root@localhost:3306/contao_test

    bundles:
        name: Bundles
        runs-on: ubuntu-latest
        env:
            BUNDLES: 'calendar-bundle core-bundle faq-bundle manager-bundle news-bundle'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: 7.3
                  extension-csv: intl
                  coverage: none

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex
                  bundles=(${{ env.BUNDLES }})
                  for bundle in "${bundles[@]}"; do
                      cd $bundle
                      php -r '
                          $data = json_decode(file_get_contents(__DIR__."/composer.json"), true);
                          if ("contao/core-bundle" !== $data["name"]) {
                              $data["repositories"][0]["type"] = "path";
                              $data["repositories"][0]["url"] = "../core-bundle";
                          }
                          if ("contao/installation-bundle" !== $data["name"]) {
                              $data["repositories"][1]["type"] = "path";
                              $data["repositories"][1]["url"] = "../installation-bundle";
                          }
                          file_put_contents(__DIR__."/composer.json", json_encode($data, JSON_UNESCAPED_SLASHES));
                      '
                      COMPOSER_ROOT_VERSION=dev-${{ env.GITHUB_SHA }} composer install --no-interaction --no-suggest
                      cd ..
                  done

            - name: Run the unit tests
              run: |
                  bundles=(${{ env.BUNDLES }})
                  for bundle in "${bundles[@]}"; do
                      cd $bundle
                      vendor/bin/phpunit
                      cd ..
                  done

    windows:
        name: Windows
        runs-on: windows-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@1.5.1
              with:
                  php-version: 7.3
                  coverage: none

            - name: Enable PHP extensions
              run: |
                echo extension=php_intl.dll >> C:\tools\php\php.ini
                echo extension=php_gd2.dll >> C:\tools\php\php.ini
                echo extension=php_fileinfo.dll >> C:\tools\php\php.ini

            - name: Adjust the Git autocrlf settings
              run: git config --global core.autocrlf false

            - name: Checkout
              uses: actions/checkout@v1
              with:
                  fetch-depth: 50

            - name: Install dependencies
              run: |
                  composer global require symfony/flex --no-progress
                  composer install --no-interaction --no-suggest --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit.bat
