name: CI

on:
    pull_request: ~
    push:
        branches:
            - 5.x
        tags:
            - '*'
    schedule:
        - cron: 0 13 * * MON,THU

permissions: read-all

jobs:
    coverage:
        name: Coverage
        runs-on: ubuntu-latest
        if: github.event_name != 'schedule'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: pcov
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Generate the coverage report
              run: php -d pcov.enabled=1 vendor/bin/phpunit --testsuite=coverage --coverage-clover=clover.xml --colors=always

            - name: Upload the coverage report
              uses: codecov/codecov-action@v2
              with:
                  files: ./clover.xml
                  fail_ci_if_error: true

    windows:
        name: Windows
        runs-on: windows-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  ini-values: memory_limit=1G
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Adjust the Git autocrlf setting
              run: git config --global core.autocrlf false

            - name: Checkout
              uses: actions/checkout@v3

            - name: Get the Composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache the dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit.bat --colors=always

    ecs:
        name: ECS
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin ecs install --no-interaction --no-progress

            - name: Run ECS
              run: tools/ecs/vendor/bin/ecs check *-bundle/bin *-bundle/src *-bundle/tests test-case/src tools/*/src --config tools/ecs/config/default.php --no-progress-bar --ansi

    ecs-legacy:
        name: ECS Legacy
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin ecs install --no-interaction --no-progress

            - name: Run ECS
              run: |
                  tools/ecs/vendor/bin/ecs check *-bundle/contao --config tools/ecs/config/legacy.php --no-progress-bar --ansi
                  tools/ecs/vendor/bin/ecs check *-bundle/contao/templates --config tools/ecs/config/template.php --no-progress-bar --ansi

    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin phpstan install --no-interaction --no-progress

            - name: Run PHPStan
              run: tools/phpstan/vendor/bin/phpstan analyse --no-progress

    rector:
        name: Rector
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin rector install --no-interaction --no-progress

            - name: Run Rector
              run: tools/rector/vendor/bin/rector --config tools/rector/config/rector.php --dry-run --no-progress-bar

    yamllint:
        name: YAMLlint
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Run YAMLlint
              run: |
                  python3 -m pip install --upgrade pip
                  python3 -m pip install --upgrade setuptools wheel
                  python3 -m pip install --upgrade yamllint
                  /home/runner/.local/bin/yamllint .

    require-checker:
        name: Require Checker
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer -dcore-bundle install --no-interaction --no-progress
                  composer bin require-checker install --no-interaction --no-progress

            - name: Run the require checker for contao/contao
              run: tools/require-checker/vendor/bin/composer-require-checker check --config-file=tools/require-checker/config.json composer.json --ansi

            - name: Run the require checker for contao/core-bundle
              run: tools/require-checker/vendor/bin/composer-require-checker check --config-file=tools/require-checker/config.json core-bundle/composer.json --ansi

    service-linter:
        name: Service Linter
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin service-linter install --no-interaction --no-progress

            - name: Run the service linter
              run: tools/service-linter/bin/lint-service-ids --ansi

    tests:
        name: PHP ${{ matrix.php }}
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        strategy:
            fail-fast: false
            matrix:
                php: [8.1]
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    reverse:
        name: PHP 8.1 Reverse Order
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: composer install --no-interaction --no-progress

            - name: Run the unit tests in reverse order
              run: vendor/bin/phpunit --order-by=reverse --extensions Contao\\CoreBundle\\Tests\\PhpunitExtension\\GlobalStateWatcher --colors=always

    nightly:
        name: PHP 8.2
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        continue-on-error: true
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.2
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: composer install --ignore-platform-req=php --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    prefer-lowest:
        name: Prefer Lowest
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Initialize the database
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -uroot -proot -e "CREATE database contao_test"

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: composer update --prefer-lowest --prefer-stable --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --colors=always

            - name: Run the functional tests
              run: vendor/bin/phpunit --testsuite=functional --colors=always
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/contao_test

    bundles:
        name: Bundles
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Test the single bundles
              run: |
                  bundles=(calendar-bundle comments-bundle core-bundle faq-bundle maker-bundle manager-bundle news-bundle newsletter-bundle)
                  for bundle in "${bundles[@]}"; do
                      cd $bundle
                      php -r '
                          $data = json_decode(file_get_contents(__DIR__."/composer.json"), true);
                          if ("contao/core-bundle" !== $data["name"]) {
                              $data["repositories"][0]["type"] = "path";
                              $data["repositories"][0]["url"] = "../core-bundle";
                          }
                          if ("contao/news-bundle" !== $data["name"]) {
                              $data["repositories"][1]["type"] = "path";
                              $data["repositories"][1]["url"] = "../news-bundle";
                          }
                          if ("contao/test-case" !== $data["name"]) {
                              $data["repositories"][2]["type"] = "path";
                              $data["repositories"][2]["url"] = "../test-case";
                          }
                          file_put_contents(__DIR__."/composer.json", json_encode($data, JSON_UNESCAPED_SLASHES));
                      '
                      COMPOSER_ROOT_VERSION=dev-${{ env.GITHUB_SHA }} composer install --no-interaction --no-progress
                      vendor/bin/phpunit --colors=always
                      cd ..
                  done

    dependencies:
        name: Dependencies
        runs-on: ubuntu-latest
        if: github.event_name != 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: json, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin monorepo install --no-interaction --no-progress

            - name: Validate the composer.json files
              run: tools/monorepo/vendor/bin/monorepo-tools composer-json --validate --ansi

    inspect:
        name: Inspect Unit Tests
        runs-on: ubuntu-latest
        if: github.event_name == 'schedule'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: dom, fileinfo, filter, gd, hash, intl, json, mbstring, mysqli, pcre, pdo_mysql, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Install the dependencies
              run: |
                  composer install --no-interaction --no-progress
                  composer bin isolated-tests install --no-interaction --no-progress

            - name: Run the unit tests
              run: vendor/bin/phpunit --extensions Contao\\CoreBundle\\Tests\\PhpunitExtension\\GlobalStateWatcher --colors=always

            - name: Run the unit tests isolated
              run: tools/isolated-tests/bin/run-tests-isolated --ansi

    monorepo-split:
        name: Monorepo Split
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.1
                  extensions: json, zlib
                  coverage: none
              env:
                  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v3

            - name: Cache the monorepo split
              uses: actions/cache@v1
              with:
                  path: .monorepo-split-cache
                  key: dev-${GITHUB_REF##*/}

            - name: Install the dependencies
              run: composer global require contao/monorepo-tools:dev-main

            - name: Split the monorepo
              run: $HOME/.composer/vendor/bin/monorepo-tools split ${GITHUB_REF##*/}
              env:
                  GITHUB_TOKEN: ${{ secrets.MONOREPO_SPLIT_TOKEN }}
