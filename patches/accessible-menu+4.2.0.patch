diff --git a/node_modules/accessible-menu/dist/accessible-menu.es.js b/node_modules/accessible-menu/dist/accessible-menu.es.js
index 1ae7b97..eba903e 100644
--- a/node_modules/accessible-menu/dist/accessible-menu.es.js
+++ b/node_modules/accessible-menu/dist/accessible-menu.es.js
@@ -1590,7 +1590,7 @@ class w {
    */
   _handleFocus() {
     this.elements.menuItems.forEach((e, t) => {
-      e.dom.link.addEventListener("focus", () => {
+      e.dom.link?.addEventListener("focus", () => {
         this.focusState = "self", this.currentChild = t;
       });
     }), this.dom.menu.addEventListener("focusout", (e) => {
@@ -1616,7 +1616,7 @@ class w {
       o(n), n.button === 0 && (s.toggle(), s.isOpen && (t.focusState = "self", s.elements.controlledMenu.focusState = "none"));
     }
     this.elements.menuItems.forEach((t, s) => {
-      t.dom.link.addEventListener(
+      t.dom.link?.addEventListener(
         "pointerdown",
         () => {
           this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this._clearTimeout(), this.focusChild(s);
@@ -1686,7 +1686,7 @@ class w {
    */
   _handleHover() {
     this.elements.menuItems.forEach((e, t) => {
-      e.dom.link.addEventListener("pointerenter", (s) => {
+      e.dom.link?.addEventListener("pointerenter", (s) => {
         s.pointerType === "pen" || s.pointerType === "touch" || (this.hoverType === "on" ? (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusChild(t), e.isSubmenuItem && (this.enterDelay > 0 ? (this._clearTimeout(), this._setTimeout(() => {
           e.elements.toggle.preview();
         }, this.enterDelay)) : e.elements.toggle.preview())) : this.hoverType === "dynamic" && (this.currentChild = t, (!this.isTopLevel || this.focusState !== "none") && (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusCurrentChild()), (!this.isTopLevel || this.hasOpened) && (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusCurrentChild(), e.isSubmenuItem ? this.enterDelay > 0 ? (this._clearTimeout(), this._setTimeout(() => {
@@ -3102,7 +3102,7 @@ class q extends w {
    */
   _handleHover() {
     this.elements.menuItems.forEach((t, s) => {
-      t.dom.link.addEventListener("pointerenter", (n) => {
+      t.dom.link?.addEventListener("pointerenter", (n) => {
         if (!(n.pointerType === "pen" || n.pointerType === "touch")) {
           if (this.hoverType === "on") {
             this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusChild(s);
@@ -3477,7 +3477,7 @@ class j extends w {
    */
   _handleHover() {
     this.elements.menuItems.forEach((t, s) => {
-      t.dom.link.addEventListener("pointerenter", (n) => {
+      t.dom.link?.addEventListener("pointerenter", (n) => {
         n.pointerType === "pen" || n.pointerType === "touch" || (this.hoverType === "on" ? (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusChild(s), t.isSubmenuItem && (this.enterDelay > 0 ? (this._clearTimeout(), this._setTimeout(() => {
           t.elements.toggle.preview();
         }, this.enterDelay)) : t.elements.toggle.preview())) : this.hoverType === "dynamic" && (this.currentChild = s, (!this.isTopLevel || this.focusState !== "none") && (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusCurrentChild()), (!this.isTopLevel || this.hasOpened) && (this.currentEvent = "mouse", this.elements.rootMenu.blurChildren(), this.focusCurrentChild(), t.isSubmenuItem ? this.enterDelay > 0 ? (this._clearTimeout(), this._setTimeout(() => {
